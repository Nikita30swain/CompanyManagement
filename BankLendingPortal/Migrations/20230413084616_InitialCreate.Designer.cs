// <auto-generated />
using System;
using BankLendingPortal.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankLendingPortal.Migrations
{
    [DbContext(typeof(DefaultContext))]
    [Migration("20230413084616_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BankLendingPortal.DAL.EntityModels.CreditRisk", b =>
                {
                    b.Property<int>("CrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CrId"), 1L, 1);

                    b.Property<string>("BasicCheck")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreditScore")
                        .HasColumnType("int");

                    b.Property<int>("Emi")
                        .HasColumnType("int");

                    b.Property<string>("LoanAppId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CrId");

                    b.HasIndex("LoanAppId");

                    b.ToTable("CreditRisks");
                });

            modelBuilder.Entity("BankLendingPortal.DAL.EntityModels.CustomerMaster", b =>
                {
                    b.Property<string>("CustId")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("AadharCard")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContactNo")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<string>("CustFirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustLastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MonthlySalary")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustId");

                    b.ToTable("CustomerMasters");
                });

            modelBuilder.Entity("BankLendingPortal.DAL.EntityModels.LoanAppDetailMaster", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Installment")
                        .HasColumnType("int");

                    b.Property<int>("InterestRate")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastDateofinstallPay")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoanAppId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MonthNo")
                        .HasColumnType("int");

                    b.Property<int>("POutStandingBeginOfMon")
                        .HasColumnType("int");

                    b.Property<int>("PRepayment")
                        .HasColumnType("int");

                    b.Property<int>("PrOutStandingEndOfMon")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LoanAppId");

                    b.ToTable("LoanAppDetailMasters");
                });

            modelBuilder.Entity("BankLendingPortal.DAL.EntityModels.LoanApplication", b =>
                {
                    b.Property<string>("LoanAppId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AppStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustId")
                        .IsRequired()
                        .HasColumnType("nvarchar(6)");

                    b.Property<int>("LoanAmt")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoanAppDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NoOfYears")
                        .HasColumnType("int");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfLoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoanAppId");

                    b.HasIndex("CustId");

                    b.ToTable("LoanApplications");
                });

            modelBuilder.Entity("BankLendingPortal.DAL.EntityModels.LoanAppMaster", b =>
                {
                    b.Property<string>("LoanAppId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InterestRate")
                        .HasColumnType("int");

                    b.HasKey("LoanAppId");

                    b.ToTable("LoanAppMasters");
                });

            modelBuilder.Entity("BankLendingPortal.DAL.EntityModels.LoanMaster", b =>
                {
                    b.Property<string>("LoanId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Typeofloan")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("datetime2");

                    b.Property<int>("InterestRate")
                        .HasColumnType("int");

                    b.HasKey("LoanId", "Typeofloan", "DateOfCreation");

                    b.ToTable("LoanMaster");
                });

            modelBuilder.Entity("BankLendingPortal.DAL.EntityModels.PaymentTrack", b =>
                {
                    b.Property<string>("PaymentTrackId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DueDateOfPayment")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoanAppId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Month_no")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentRecieveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentTrackId");

                    b.ToTable("PaymentTracks");
                });

            modelBuilder.Entity("BankLendingPortal.DAL.EntityModels.CreditRisk", b =>
                {
                    b.HasOne("BankLendingPortal.DAL.EntityModels.LoanApplication", "LoanApplication")
                        .WithMany("CreditRisks")
                        .HasForeignKey("LoanAppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("BankLendingPortal.DAL.EntityModels.LoanAppDetailMaster", b =>
                {
                    b.HasOne("BankLendingPortal.DAL.EntityModels.LoanAppMaster", "LoanAppMaster")
                        .WithMany("LoanAppDetailMasters")
                        .HasForeignKey("LoanAppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankLendingPortal.DAL.EntityModels.LoanApplication", "LoanApplication")
                        .WithMany("LoanAppDetailMasters")
                        .HasForeignKey("LoanAppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanAppMaster");

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("BankLendingPortal.DAL.EntityModels.LoanApplication", b =>
                {
                    b.HasOne("BankLendingPortal.DAL.EntityModels.CustomerMaster", "customerMaster")
                        .WithMany("LoanApplications")
                        .HasForeignKey("CustId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customerMaster");
                });

            modelBuilder.Entity("BankLendingPortal.DAL.EntityModels.CustomerMaster", b =>
                {
                    b.Navigation("LoanApplications");
                });

            modelBuilder.Entity("BankLendingPortal.DAL.EntityModels.LoanApplication", b =>
                {
                    b.Navigation("CreditRisks");

                    b.Navigation("LoanAppDetailMasters");
                });

            modelBuilder.Entity("BankLendingPortal.DAL.EntityModels.LoanAppMaster", b =>
                {
                    b.Navigation("LoanAppDetailMasters");
                });
#pragma warning restore 612, 618
        }
    }
}
